
server {
    listen 80;
    listen 443 ssl;
    server_name open-ipaas.wakedata.com;

    root /usr/share/nginx/html/ipaas;



        error_log /var/log/nginx/ipaas_error_ssl.log error;
        access_log /var/log/nginx/ipaas_access_ssl.log main;

        ssl_certificate /usr/share/nginx/cert/wakedatafullchain.pem;
        ssl_certificate_key /usr/share/nginx//cert/wakedataprivkey.pem;
        ssl_session_timeout 5m;
        #ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
        #ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-RC4-SHA:AES128-GCM-SHA256:AES128-SHA256:AES128-SHA:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:AES256-GCM-SHA384:AES256-SHA256:AES256-SHA:ECDHE-RSA-AES128-SHA256:RC4-SHA:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!DSS:!PKS;
        ssl_prefer_server_ciphers on;


    location /dw/open {
        proxy_pass http://192.168.0.110:8082;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /permission {
        proxy_pass http://192.168.0.110:8083;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }


    location / {
      if ($request_method = 'OPTIONS') {
        return 204;
      }

      set $cache '1';

      if ($uri ~* "\.html$") {
        set $cache '0';
      }

      # 非 html 缓存
      if ($cache = '1') {
                  add_header 'Access-Control-Allow-Origin' 'https://open-ipaas.wakedata.com' always;
                  add_header 'Access-Control-Allow-Credentials' 'true' always;
                  add_header 'Access-Control-Allow-Methods' '*' always;
                  add_header 'Access-Control-Allow-Headers' '*' always;
                  add_header 'X-Content-Type-Options' 'nosniff' always;
        
        # 缓存 20 天
        expires 20d;
      }

      if ($cache = '0') {
        # 跨域处理, add_header 无法继承父指令，因此这里重复了
                  add_header 'Access-Control-Allow-Origin' 'https://open-ipaas.wakedata.com' always;
                  add_header 'Access-Control-Allow-Credentials' 'true' always;
                  add_header 'Access-Control-Allow-Methods' '*' always;
                  add_header 'Access-Control-Allow-Headers' '*' always;
                  add_header 'X-Content-Type-Options' 'nosniff' always;
        
        # 禁止缓存
        add_header 'Cache-Control' 'no-cache, no-store, must-revalidate' always;
        # 点击劫持保护
                  add_header 'X-Frame-Options' 'SAMEORIGIN';
        
        add_header 'X-UA-Compatible' 'IE=edge,Chrome=1';

        # xss 保护
        # 我们也推荐使用 <meta http-equiv="Content-Security-Policy" content="..."> 进行配置
                  # 默认规则
          # 参考 https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html
          # https://content-security-policy.com/
          # 试验性
        # 报告模式
            add_header 'Content-Security-Policy-Report-Only' "default-src 'self' open-ipaas.wakedata.com; img-src https: data: blob:; media-src https: blob:; object-src 'none'; form-action 'self' open-ipaas.wakedata.com; style-src 'self' open-ipaas.wakedata.com' unsafe-inline'; script-src 'self' open-ipaas.wakedata.com 'unsafe-eval' 'unsafe-inline'; font-src 'self' open-ipaas.wakedata.com data:; frame-ancestors 'self' open-ipaas.wakedata.com" always;
            add_header 'X-XSS-Protection' '1;mode=block' always;
        }

    }
}
